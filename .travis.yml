dist: xenial
language: cpp
matrix:
  include:
  - os: linux
    dist: xenial
    addons: &1
      apt:
        sources:
        - george-edison55-precise-backports
        - ubuntu-toolchain-r-test
        - llvm-toolchain-trusty-3.9
        packages:
        - g++-4.9
        - clang-3.9
        - cmake
        - mesa-common-dev 
        - xorg-dev
        - libgl1-mesa-dev 
        - libxrandr-dev 
        - libxcb-xinerama0 
        - libxinerama-dev 
        - libxcursor-dev 
        - libxi-dev
    compiler: clang
    env: COMPILER_VERSION=-3.9 BUILD_TYPE=Release UPLOAD=true APPIMAGE=true

  - os: linux
    dist: xenial
    addons: *1
    compiler: gcc
    env: COMPILER_VERSION=-4.9 BUILD_TYPE=Release UPLOAD=false

# TODO sanitizer builds
#  - addons: *1
#    compiler: gcc
#    env: COMPILER_VERSION=4.9 BUILD_TYPE=Release EXTRA_CXXFLAGS="-fsanitize=address"
#  - addons: *1
#    compiler: clang
#    env: COMPILER_VERSION=3.9 BUILD_TYPE=Debug CFLAGS="-O0" CXXFLAGS="-O0"

  - os: osx
    osx_image: xcode10.2
    compiler: clang

  

before_install:
  - git submodule update --init --recursive
    # - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew update          ; fi


script:
  - export CC="${CC}${COMPILER_VERSION}"
  - export CXX="${CXX}${COMPILER_VERSION}"
  - ${CC} -v
  - mkdir build
  - cd build
  - cmake .. -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=${BUILD_TYPE}
  - make -j 2
  - |
    if [ "$APPIMAGE" = true ]; then
     make install DESTDIR=AppDir
     wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
     chmod +x linuxdeploy-x86_64.AppImage
     ./linuxdeploy-x86_64.AppImage --appdir AppDir --output appimage -d ../icons/gltf-insight.desktop -i ../icons/gltf-insight.svg
    fi

after_success:
  - |
    if [ "$TRAVIS_BRANCH" = "devel" ]; then
     if [ "$APPIMAGE" = true ]; then
      ls -lh *.AppImage # Assuming you have some files in out/ that you would like to upload
      if [ "$UPLOAD" = true ]; then
       wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh
       bash upload.sh gltf-insight*.AppImage
      fi
     fi
    fi
  - echo "after_success is done"

branches:
  except:
    - # Do not build tags that we create when we upload to GitHub Releases
    - /^(?i:continuous)$/
    - /^(?i:continuous-appveyor)$/
    - /^(?i:continuous-macos)$/
